stages:
    - test
    - staging
  
test:
  image: python:3.8
  stage: test
  script:
  # this configures Django application to use attached postgres database that is run on `postgres` host
    - cd backend/secfit
    - apt-get update -qy
    - pip install -r requirements.txt
    - python manage.py test

staging:
  type: deploy
  image: ruby
  stage: staging
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    # TODO: different apps for backend and frontend, seems like we have to tell Heroku a lot about our project structure???
    # - dpl --provider=heroku --app=sec-fit-t18 --api-key=$HEROKU_STAGING_API_KEY
    # - dpl --provider=heroku --app=sec-fit-t18 --api-key=$HEROKU_STAGING_API_KEY
  only:
    - master
